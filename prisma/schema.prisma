generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    CONTRIBUTOR
    USER
}

enum NavItemAlignment {
    RIGHT
    LEFT
}

model User {
    id       String  @id @default(uuid()) @map("_id")
    email    String  @unique
    name     String
    password String
    photo    String?
    role     Role    @default(USER)
    Post     Post[]
}

model NavigationItem {
    id           String           @id @default(uuid()) @map("_id")
    Navigation   Navigation?      @relation(fields: [navigationId], references: [id])
    navigationId String?
    name         String
    href         String
    position     Int              @default(0)
    alignment    NavItemAlignment @default(RIGHT)
    newTab       Boolean          @default(false)
}

model Navigation {
    id        String           @id @default(uuid()) @map("_id")
    brandName String
    navItems  NavigationItem[]
}

model PageSection {
    id        String   @id @default(uuid()) @map("_id")
    content   String
    position  Int      @default(0)
    published Boolean  @default(false)
    page      Page?    @relation(fields: [pageId], references: [id], onDelete: Cascade)
    pageId    String?
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model Page {
    id          String        @id @default(uuid()) @map("_id")
    name        String        @unique
    slug        String
    title       String
    description String
    sections    PageSection[]
    published   Boolean       @default(false)
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @default(now()) @updatedAt
}

model Post {
    id        String   @id @default(uuid()) @map("_id")
    title     String
    published Boolean  @default(false)
    tags      String[]
    thumbnail String
    author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
    authorId  String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}
